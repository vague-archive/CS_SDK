// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct Mat3x3 : IFlatbufferObject
{
  private Struct __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public void __init(int _i, ByteBuffer _bb) { __p = new Struct(_i, _bb); }
  public Mat3x3 __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public float M(int j) { return __p.bb.GetFloat(__p.bb_pos + 0 + j * 4); }

  public static Offset<Mat3x3> CreateMat3x3(FlatBufferBuilder builder, float[] M) {
    builder.Prep(4, 36);
    for (int _idx0 = 9; _idx0 > 0; _idx0--) {
      builder.PutFloat(M[_idx0-1]);
    }
    return new Offset<Mat3x3>(builder.Offset);
  }
}

