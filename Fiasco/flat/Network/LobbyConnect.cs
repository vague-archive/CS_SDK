// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Network
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct LobbyConnect : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static LobbyConnect GetRootAsLobbyConnect(ByteBuffer _bb) { return GetRootAsLobbyConnect(_bb, new LobbyConnect()); }
  public static LobbyConnect GetRootAsLobbyConnect(ByteBuffer _bb, LobbyConnect obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public LobbyConnect __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string ConnectedId { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetConnectedIdBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetConnectedIdBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetConnectedIdArray() { return __p.__vector_as_array<byte>(4); }
  public string Players(int j) { int o = __p.__offset(6); return o != 0 ? __p.__string(__p.__vector(o) + j * 4) : null; }
  public int PlayersLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<Network.LobbyConnect> CreateLobbyConnect(FlatBufferBuilder builder,
      StringOffset connected_idOffset = default(StringOffset),
      VectorOffset playersOffset = default(VectorOffset)) {
    builder.StartTable(2);
    LobbyConnect.AddPlayers(builder, playersOffset);
    LobbyConnect.AddConnectedId(builder, connected_idOffset);
    return LobbyConnect.EndLobbyConnect(builder);
  }

  public static void StartLobbyConnect(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddConnectedId(FlatBufferBuilder builder, StringOffset connectedIdOffset) { builder.AddOffset(0, connectedIdOffset.Value, 0); }
  public static void AddPlayers(FlatBufferBuilder builder, VectorOffset playersOffset) { builder.AddOffset(1, playersOffset.Value, 0); }
  public static VectorOffset CreatePlayersVector(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreatePlayersVectorBlock(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreatePlayersVectorBlock(FlatBufferBuilder builder, ArraySegment<StringOffset> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreatePlayersVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<StringOffset>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartPlayersVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<Network.LobbyConnect> EndLobbyConnect(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Network.LobbyConnect>(o);
  }
}


static public class LobbyConnectVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyString(tablePos, 4 /*ConnectedId*/, false)
      && verifier.VerifyVectorOfStrings(tablePos, 6 /*Players*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
